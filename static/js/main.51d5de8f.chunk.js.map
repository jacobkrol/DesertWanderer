{"version":3,"sources":["graphics/Logo.js","graphics/NextShuffle.js","graphics/SkipMove.js","graphics/UndoMove.js","components/Header.js","components/Card.js","components/Popup.js","logic.js","components/Game.js","styles/global.js","styles/themes.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Logo","size","id","width","height","viewBox","fill","xmlns","rx","d","stroke","strokeWidth","Stroke","styled","path","theme","text","Fill","NextShuffle","color","reshuffle","onClick","SkipMove","skipMove","strokeLinecap","strokeLinejoin","UndoMove","undoMove","HeaderWrapper","div","SvgWrapper","props","align","Header","CardBox","gray","cardBg","selected","CardWrapper","red","black","Card","card","handleClick","value","slice","suit","Number","String","getTextFromValue","className","title","Input","input","primary","FormButtonRow","PopupOverlay","PopupBox","body","Popup","dismissClick","dismissText","actionClick","actionText","type","get_rowcol_from_index","index","row","Math","floor","col","get_index_from_rowcol","randint","n","random","get_deck_with_swap","deck","card1","card2","index1","indexOf","index2","get_next_round_deck","pile","broken","rowSuit","push","array","randomIndex","currentIndex","length","shuffle","dealing","pop","GameWrapper","GameBoardWrapper","Game","useState","cards","chosen","splice","concat","get_deck","setDeck","deckHistory","setDeckHistory","setSelected","popupText","setPopupText","updateDeck","newDeck","unselect","document","getElementById","classList","remove","cardClick","left","add","select","options","chosenIndex","swapped","aces","aceOptions","a","nextValue","nextSuit","get_skip_move_deck","prevDeck","trimmedHistory","map","i","GlobalStyles","createGlobalStyle","lightTheme","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.51d5de8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Logo({ size = 220 }) {\r\n    return (\r\n        <svg id=\"logo\" width={size} height={size} viewBox=\"0 0 220 220\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <rect width=\"220\" height=\"220\" rx=\"10\" fill=\"#955C07\"/>\r\n            <path d=\"M207.619 10L187.879 15.3028C189.004 17.5821 189.74 20.0938 190 22.743L209.61 17.4746L207.619 10V10ZM86.71 10.2881L85.7576 17.9778L147.662 25.3062V24.6396C147.662 22.1882 148.095 19.8357 148.874 17.6467L86.71 10.2881V10.2881ZM168.874 11.3074C161.429 11.3074 155.455 17.2295 155.455 24.6396C155.455 32.0497 161.429 37.9718 168.874 37.9718C176.32 37.9718 182.294 32.0497 182.294 24.6396C182.294 17.2295 176.32 11.3074 168.874 11.3074ZM149.913 34.0194L117.662 57.626L122.251 63.819L154.589 40.1737C152.641 38.432 151.082 36.3461 149.913 34.0194ZM181.905 41.2489C179.827 42.8402 177.489 44.0788 174.935 44.8099L191.775 73.7107L198.528 69.84L181.905 41.2489V41.2489ZM54.5455 41.4984C54.4156 41.5027 54.329 41.507 54.2424 41.5156C52.8139 41.6532 50.9091 43.0079 49.1342 45.283C48.0519 53.9274 48.0519 63.604 49.2641 72.2054L50 77.2802L44.8485 76.5491C42.6407 76.2481 41.7706 76.2051 39.2597 76.3771L35.4719 76.6351L35.1255 72.8505C34.7792 69.1519 33.4935 63.948 32.0476 60.2494C30.5714 59.0022 29.5671 58.7872 28.6797 58.8732C27.8788 59.0022 26.7576 59.5183 25.4286 60.8085C26.2121 68.8939 26.8831 76.6781 29.1948 84.4194C33.3636 86.2257 39.3333 87.1718 45.1948 86.8708L49.5238 86.6558L49.2641 90.9565C47.4026 122.739 46.6234 152.285 48.8312 183.766C52.3377 185.357 55.671 186.131 58.3117 186.131C60.8225 186.131 62.4675 185.486 63.5065 184.626C65.4545 166.262 63.7662 148.887 62.7273 130.953L62.5108 126.91L66.5801 126.867C71.2121 126.824 75.1082 125.878 77.7922 124.545C80.3896 123.341 81.6017 121.793 81.8182 121.19C84.2424 104.59 85.8874 89.9673 84.9351 74.1837C84.8918 73.2376 84.632 72.9365 84.1558 72.5495C83.7229 72.1624 82.8571 71.8183 81.9048 71.7753C80.9524 71.6893 79.9134 71.9043 79.2641 72.2484C78.6147 72.5925 78.3983 72.8935 78.2684 73.2806C74.1991 86.6558 70.7792 99.9449 70.2165 114.008V114.051L62.4242 113.664V113.621C63.5931 91.6876 62.684 68.5928 61.2987 46.4442C58.1818 42.4058 56.0173 41.4812 54.5455 41.4984V41.4984ZM158.268 42.8746L134.935 104.332L142.208 107.084L165.584 45.455C162.987 45.068 160.476 44.1648 158.268 42.8746V42.8746ZM187.013 90.9135V111.471L183.723 110.697L181.991 98.5687L174.286 99.6869L176.797 117.062L187.013 119.427V128.287H86.1472C84.8052 129.577 83.0736 130.652 81.2121 131.555C78.2684 132.931 74.7186 133.964 70.7359 134.394C71.8182 151.252 73.2468 168.326 71.1255 186.733L71.039 187.765L70.3896 188.625C67.619 192.281 63.0303 193.872 58.3117 193.872C53.5498 193.872 48.3983 192.453 43.2468 189.701L41.3377 188.712L41.1818 186.604C39.697 166.649 39.4372 147.554 39.8874 128.287H10V210H210V128.287H194.805V111.729L204.762 109.45L206.84 98.7838L199.221 97.3215L198.095 102.998L194.805 103.73V90.9135H187.013V90.9135Z\" fill=\"#DECC28\" stroke=\"#FEFFBC\" strokeWidth=\"2\"/>\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Stroke = styled.path`\r\n    stroke: ${({ theme }) => theme.text};\r\n`\r\nconst Fill = styled.path`\r\n    fill: ${({ theme }) => theme.text};\r\n`\r\n\r\nexport default function NextShuffle({ size = 350, color = \"black\", reshuffle = null }) {\r\n    return (\r\n        <svg id=\"next-shuffle\" width={size} height={size} onClick={() => reshuffle()} viewBox=\"0 0 250 350\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <Stroke d=\"M25 7.5H225C234.665 7.5 242.5 15.335 242.5 25V64V264V325C242.5 334.665 234.665 342.5 225 342.5H25C15.335 342.5 7.5 334.665 7.5 325V277V93V25C7.5 15.335 15.335 7.5 25 7.5Z\" stroke={color} strokeWidth=\"25\"/>\r\n            <Fill d=\"M191.386 114.239C174.927 96.2725 151.28 85 125 85C75.2975 85 35 125.297 35 175H51.875C51.875 134.613 84.6125 101.875 125 101.875C146.623 101.875 166.051 111.269 179.439 126.186L153.125 152.5H215V90.625L191.386 114.239Z\" fill={color} />\r\n            <Fill d=\"M198.125 175C198.125 215.387 165.387 248.125 125 248.125C103.377 248.125 83.9488 238.731 70.5613 223.814L96.875 197.5H35V259.375L58.6137 235.761C75.0725 253.728 98.72 265 125 265C174.703 265 215 224.703 215 175H198.125Z\" fill={color} />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Stroke = styled.path`\r\n    stroke: ${({ theme }) => theme.text};\r\n`\r\n\r\nexport default function SkipMove({ size = 350, color = \"black\", skipMove = null }) {\r\n    return (\r\n        <svg id=\"skip-move\" width={size} height={size} onClick={() => skipMove()} viewBox=\"0 0 250 350\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <Stroke d=\"M25 7.5H225C234.665 7.5 242.5 15.335 242.5 25V64V264V325C242.5 334.665 234.665 342.5 225 342.5H25C15.335 342.5 7.5 334.665 7.5 325V277V93V25C7.5 15.335 15.335 7.5 25 7.5Z\" stroke={color} strokeWidth=\"25\"/>\r\n            <Stroke d=\"M58.8704 100.5L152.62 175.5L58.8704 250.5V100.5Z\" stroke={color} strokeWidth=\"20\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n            <Stroke d=\"M190.13 109.875V241.125\" stroke={color} strokeWidth=\"20\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Stroke = styled.path`\r\n    stroke: ${({ theme }) => theme.text};\r\n`\r\nconst Fill = styled.path`\r\n    fill: ${({ theme }) => theme.text};\r\n`\r\n\r\nexport default function UndoMove({ size = 350, color = \"black\", undoMove = null }) {\r\n    return (\r\n        <svg id=\"undo-move\" width={size} height={size} onClick={() => undoMove()} viewBox=\"0 0 250 350\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <Stroke d=\"M7.5 25C7.5 15.335 15.335 7.5 25 7.5H225C234.665 7.5 242.5 15.335 242.5 25V64V264V325C242.5 334.665 234.665 342.5 225 342.5H25C15.335 342.5 7.5 334.665 7.5 325V277V93V25Z\" stroke={color} strokeWidth=\"25\"/>\r\n            <Fill d=\"M129.175 141.667C107.091 141.667 87.0915 149.917 71.6748 163.333L41.6748 133.333V208.333H116.675L86.5081 178.167C98.0915 168.5 112.841 162.5 129.175 162.5C158.675 162.5 183.758 181.75 192.508 208.333L212.258 201.833C200.675 166.917 167.925 141.667 129.175 141.667Z\" fill={color} />\r\n        </svg>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n// import { FiSettings } from 'react-icons/fi';\r\nimport Logo from '../graphics/Logo';\r\nimport NextShuffle from '../graphics/NextShuffle';\r\nimport SkipMove from '../graphics/SkipMove';\r\nimport UndoMove from '../graphics/UndoMove';\r\n\r\nconst HeaderWrapper = styled.div`\r\n    /* display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    width: 100%;\r\n    height: 2rem;\r\n    & > *:nth-child(0) {\r\n        justify-self: start;\r\n        grid-column: 1;\r\n    }\r\n    & > *:nth-child(0) svg {\r\n        height: 2rem;\r\n    }\r\n    & > *:nth-child(1) {\r\n        justify-self: center;\r\n        grid-column: 2;\r\n    }\r\n    & > *:nth-child(2) {\r\n        justify-self: end;\r\n        grid-column: 3;\r\n    } */\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 3.5rem;\r\n    & > * {\r\n        flex-basis: 0;\r\n        flex-grow: 1;\r\n    }\r\n    h2 {\r\n        text-align: center;\r\n    }\r\n    #logo {\r\n        height: 100%;\r\n        border-radius: 5px;\r\n        border: 1px solid #955C07;\r\n    }\r\n    #next-shuffle, #skip-move, #undo-move {\r\n        cursor: pointer;\r\n    }\r\n`\r\n\r\nconst SvgWrapper = styled.div`\r\n    margin: auto 0.5rem;\r\n    padding: 0.2rem;\r\n    display: flex;\r\n    justify-content: ${props => \r\n        props.align === \"left\" \r\n            ? \"flex-start\" \r\n            : props.align === \"right\" \r\n                ? \"flex-end\" \r\n                : \"center\"};\r\n    align-items: center;\r\n\r\n    & > * {\r\n        color: ${({ theme }) => theme.text};\r\n    }\r\n`\r\n\r\nexport default function Header({ reshuffle, skipMove, undoMove }) {\r\n    return (\r\n        <HeaderWrapper>\r\n            <SvgWrapper align=\"left\">\r\n                <Logo size=\"2.5rem\" />\r\n            </SvgWrapper>\r\n            <h2>Ørkenvandring</h2>\r\n            <SvgWrapper align=\"right\">\r\n                <UndoMove size=\"2.5rem\" undoMove={undoMove} />\r\n                <SkipMove size=\"2.5rem\" skipMove={skipMove} />\r\n                <NextShuffle size=\"2.5rem\" reshuffle={reshuffle} />\r\n            </SvgWrapper>\r\n        </HeaderWrapper>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { GiSpades, GiDiamonds, GiHearts, GiClubs } from 'react-icons/gi';\r\n\r\nconst getTextFromValue = (value) => {\r\n    //convert Ace, Jack, Queen, King to letters\r\n    switch(Number(value)) {\r\n        case 0:\r\n            return '';\r\n        case 1:\r\n            return 'A';\r\n        case 11:\r\n            return 'J';\r\n        case 12:\r\n            return 'Q';\r\n        case 13:\r\n            return 'K';\r\n        default:\r\n            return String(Number(value));\r\n    }\r\n}\r\n\r\nconst CardBox = styled.div`\r\n    margin: 0.2rem;\r\n    border-radius: 0.6rem;\r\n    border: 0.2rem solid ${({ theme }) => theme.gray};\r\n    padding: 0.4rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: ${({ theme }) => theme.cardBg};\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    @media (max-height: 480px) {\r\n        padding: 0.2rem 0.4rem;\r\n    }\r\n\r\n    &.selected {\r\n        background-color: ${({ theme }) => theme.selected};\r\n    }\r\n\r\n    &.selected > .card {\r\n        border-color: ${({ theme }) => theme.gray};\r\n    }\r\n`\r\n\r\nconst CardWrapper = styled.div`\r\n    border: 0.1rem solid transparent;\r\n    padding: 0.2rem;\r\n    border-radius: 0.4rem;\r\n    background-color: #DDD;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    font-size: 1.6rem;\r\n    font-family: 'Noticia Text', 'Palatino Linotype', Georgia, 'Book Antiqua', Palatino, serif;\r\n    @media (max-height: 480px) {\r\n        font-size: 1.2rem;\r\n        padding: 0.1rem;\r\n    }\r\n    color: ${({ color, theme }) => color === 'R' ? theme.red : color === 'B' ? theme.black : theme.selected};\r\n\r\n    & > * {\r\n        margin: 0;\r\n        line-height: 1;\r\n    }\r\n`\r\n\r\nexport default function Card({ card, handleClick }) {\r\n    const value = card.slice(0,2);\r\n    const suit = card.slice(2,3);\r\n    const color = card.slice(3,4);\r\n    const text = suit === 'X' ? '' : getTextFromValue(value);\r\n\r\n    return (\r\n        <CardBox id={card} className=\"card-box\" onClick={() => handleClick(card)}>\r\n            <CardWrapper className=\"card\" color={color}>\r\n                {suit === 'H'\r\n                    ? <GiHearts title=\"hearts\"/>\r\n                    : suit === 'D'\r\n                        ? <GiDiamonds title=\"diamonds\" />\r\n                        : suit === 'S'\r\n                            ? <GiSpades title=\"spades\" />\r\n                            : suit === 'C'\r\n                                ? <GiClubs title=\"clubs\" />\r\n                                : <p></p>\r\n                }\r\n                <p>{text}</p>\r\n            </CardWrapper>\r\n        </CardBox>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Input = styled.input`\r\n    padding: 0.4em 0.8em;\r\n    font-family: inherit;\r\n    margin: 0.5em;\r\n    width: 18em;\r\n    font-size: 0.9em;\r\n\r\n    /* &:is([type=\"email\"], [type=\"text\"], [type=\"password\"], [type=\"submit\"]):focus {\r\n        outline: none;\r\n        box-shadow: 0 0 4px 2px ${({ theme }) => theme.primary};\r\n    } */\r\n`\r\n\r\nconst FormButtonRow = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    & > input {\r\n        width: initial;\r\n        cursor: pointer;\r\n    }\r\n\r\n    & > input:only-child {\r\n        margin: 0.5em 0.5em 0.5em auto;\r\n    }\r\n`\r\n\r\nconst PopupOverlay = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    min-width: 100vw;\r\n    height: 100%;\r\n    width: 100%;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 20;\r\n    background: rgba(25,25,25,0.8);\r\n`\r\n\r\nconst PopupBox = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    min-width: 16em;\r\n    max-width: 30em;\r\n    min-height: 8em;\r\n    padding: 0.5em;\r\n    overflow: visible;\r\n    background: ${({ theme }) => theme.body};\r\n    border: 2px solid ${({ theme }) => theme.text};\r\n    border-radius: 4px;\r\n    box-shadow: 0px 2px 4px ${({ theme }) => theme.text};\r\n\r\n    & > p {\r\n        margin: 1em;\r\n    }\r\n`\r\n\r\nexport default function Popup({ text = \"\", dismissClick, dismissText, actionClick, actionText }) {\r\n    return (\r\n        <PopupOverlay>\r\n            <PopupBox>\r\n                <p>{text}</p>\r\n                <FormButtonRow>\r\n                    {dismissText && dismissClick\r\n                        ? <Input type=\"submit\" value={dismissText} onClick={() => dismissClick()} />\r\n                        : null\r\n                    }\r\n                    {actionText && actionClick\r\n                        ? <Input type=\"submit\" value={actionText} onClick={() => actionClick()} />\r\n                        : null\r\n                    }\r\n                </FormButtonRow>\r\n            </PopupBox>\r\n        </PopupOverlay>\r\n    )\r\n}\r\n","export function get_deck() {\r\n    // define cards\r\n    let deck = [],\r\n        cards = ['01HR','02HR','03HR','04HR','05HR','06HR','07HR',\r\n                 '08HR','09HR','10HR','11HR','12HR','13HR',\r\n                 '01SB','02SB','03SB','04SB','05SB','06SB','07SB',\r\n                 '08SB','09SB','10SB','11SB','12SB','13SB',\r\n                 '01DR','02DR','03DR','04DR','05DR','06DR','07DR',\r\n                 '08DR','09DR','10DR','11DR','12DR','13DR',\r\n                 '01CB','02CB','03CB','04CB','05CB','06CB','07CB',\r\n                 '08CB','09CB','10CB','11CB','12CB','13CB'\r\n                ];\r\n    \r\n    // randomly pull cards and add to deck\r\n    while(cards.length) {\r\n        let index = randint(cards.length),\r\n            chosen = cards[index];\r\n        deck.push(chosen);\r\n        cards.splice(index,1);\r\n    }\r\n\r\n    // add blanks at first column\r\n    deck = [].concat('01XX', deck.slice(0));\r\n    deck = [].concat(deck.slice(0,14), '02XX', deck.slice(14));\r\n    deck = [].concat(deck.slice(0,28), '03XX', deck.slice(28));\r\n    deck = [].concat(deck.slice(0,42), '04XX', deck.slice(42));\r\n\r\n    // return deck\r\n    if(deck.length === 56) {\r\n        return deck;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function get_rowcol_from_index(index) {\r\n    return {row: Math.floor(index/14), col: index%14};\r\n}\r\n\r\nexport function get_index_from_rowcol(row, col) {\r\n    return row*14+col;\r\n}\r\n\r\nexport function randint(n) {\r\n    return Math.floor(Math.random()*n);\r\n}\r\n\r\nexport function get_deck_with_swap({deck, card1, card2}) {\r\n    const index1 = deck.indexOf(card1);\r\n    const index2 = deck.indexOf(card2);\r\n    deck[index1] = card2;\r\n    deck[index2] = card1;\r\n    return [...deck];\r\n}\r\n\r\nexport function get_next_round_deck(deck) {\r\n    let pile = [];\r\n\r\n    // add cards out of pattern to pile\r\n    for(let row=0; row<4; row++) {\r\n        let broken = false;\r\n        for(let col=0; col<14; col++) {\r\n            const index = get_index_from_rowcol(row, col);\r\n            const value = Number(deck[index].slice(0,2));\r\n            const suit = deck[index].slice(2);\r\n            const rowSuit = deck[get_index_from_rowcol(row,0)].slice(2);\r\n            if(value !== col+1 || suit !== rowSuit || broken) {\r\n                broken = true;\r\n                if(suit !== 'XX') {\r\n                    pile.push(deck[index]);\r\n                }\r\n                deck[index] = '00XX';\r\n            }\r\n        }\r\n    }\r\n\r\n    // shuffle pile\r\n    pile = shuffle(pile);\r\n\r\n    // deal pile to appropriate spots\r\n    for(let row=0; row<4; row++) {\r\n        let dealing = false;\r\n        for(let col=0; col<14; col++) {\r\n            const index = get_index_from_rowcol(row, col);\r\n            const suit = deck[index].slice(2);\r\n\r\n            // if it's an empty spot\r\n            if(suit === 'XX') {\r\n                if(dealing) {\r\n                    // if not first spot in row, deal card\r\n                    deck[index] = pile.pop();\r\n                } else {\r\n                    // if first spot, name the blank\r\n                    deck[index] = '0' + String(row+1) + 'XX';\r\n                }\r\n                dealing = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // return deck\r\n    if(pile.length) {\r\n        return false;\r\n    } else {\r\n        return deck;\r\n    }\r\n}\r\n\r\nexport function get_skip_move_deck(deck) {\r\n    // find fillable blank spots\r\n    let options = [];\r\n    for(let index=0; index<deck.length; index++) {\r\n        // if not blank, or is right of King, or is right of blank\r\n        if((deck[index].slice(2) !== 'XX') ||\r\n        (index > 0 && deck[index-1].slice(0,2) === '13') ||\r\n        (index > 0 && deck[index-1].slice(2) === 'XX')) {\r\n            continue;\r\n        }\r\n\r\n        options.push(deck[index]);\r\n    }\r\n\r\n    // break if no options\r\n    if(!options.length) return deck;\r\n\r\n    // choose one at random\r\n    const chosen = options[randint(options.length)];\r\n    const chosenIndex = deck.indexOf(chosen);\r\n\r\n    // find eligible card and swap\r\n    let swapped = [];\r\n    const chosenCol = get_rowcol_from_index(deck.indexOf(chosen)).col;\r\n    if(chosenCol === 0) {\r\n        // find aces that are not in left-most column\r\n        const aces = ['01HR', '01SB', '01DR', '01CB'];\r\n        let aceOptions = [];\r\n        for(let a=0; a<4; a++) {\r\n            const {col} = get_rowcol_from_index(deck.indexOf(aces[a]));\r\n            if(col > 0) {\r\n                aceOptions.push(aces[a]);\r\n            }\r\n        }\r\n\r\n        // swap ace with blank\r\n        const next = aceOptions[randint(aceOptions.length)];\r\n        swapped = get_deck_with_swap({deck, card1: chosen, card2: next});\r\n    } else {\r\n        // find eligible card\r\n        const left = deck[chosenIndex-1];\r\n        const nextValue = Number(left.slice(0,2))+1;\r\n        const nextSuit = left.slice(2);\r\n\r\n        // swap eligible card with blank\r\n        const next = nextValue < 10\r\n            ? '0' + String(nextValue) + nextSuit\r\n            : String(nextValue) + nextSuit;        \r\n        swapped = get_deck_with_swap({deck, card1: chosen, card2: next});\r\n    }\r\n\r\n    return swapped;\r\n}\r\n\r\nfunction shuffle(array) {\r\n    let currentIndex = array.length, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n  \r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex--);\r\n  \r\n        // And swap it with the current element.\r\n        [array[currentIndex], array[randomIndex]] = [\r\n         array[randomIndex], array[currentIndex]];\r\n    }\r\n  \r\n    return array;\r\n}","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from './Header'\r\nimport Card from './Card';\r\nimport Popup from './Popup';\r\nimport {\r\n    get_deck,\r\n    get_rowcol_from_index,\r\n    get_deck_with_swap,\r\n    get_next_round_deck,\r\n    get_skip_move_deck\r\n} from '../logic';\r\n\r\nconst GameWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    max-height: 100vh;\r\n\r\n    & > *:nth-child(1) {\r\n        flex-grow: 0;\r\n    }\r\n\r\n    & > *:nth-child(2) {\r\n        flex-grow: 1;\r\n    }\r\n`\r\n\r\nconst GameBoardWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(14, 1fr);\r\n    grid-template-rows: repeat(4, 1fr);\r\n`\r\n\r\nexport default function Game() {\r\n    const [deck, setDeck] = useState(get_deck());\r\n    const [deckHistory, setDeckHistory] = useState([[...deck]]);\r\n    const [selected, setSelected] = useState(null);\r\n    const [popupText, setPopupText] = useState(null);\r\n\r\n    const updateDeck = (newDeck) => {\r\n        setDeckHistory([ ...deckHistory, [...newDeck] ]);\r\n        setDeck([...newDeck]);\r\n    }\r\n\r\n    const undoMove = () => {\r\n        if(deckHistory.length < 2) return;\r\n        const prevDeck = deckHistory[deckHistory.length-2];\r\n        setDeck([...prevDeck]);\r\n        const trimmedHistory = deckHistory.slice(0,-1);\r\n        setDeckHistory([...trimmedHistory]);\r\n    }\r\n\r\n    const select = (card) => {\r\n        setSelected(card);\r\n        document.getElementById(card).classList.add(\"selected\");\r\n    };\r\n\r\n    const unselect = (card) => {\r\n        setSelected(null);\r\n        document.getElementById(card).classList.remove(\"selected\");\r\n    }\r\n\r\n    const reshuffle = () => {\r\n        updateDeck([...get_next_round_deck(deck)]);\r\n        if(selected) unselect(selected);\r\n    }\r\n\r\n    const skipMove = () => {\r\n        updateDeck([...get_skip_move_deck(deck)]);\r\n    }\r\n\r\n    const cardClick = (card) => {\r\n        //unselect the same card\r\n        if(card === selected) {\r\n            unselect(selected);\r\n            return;\r\n        }\r\n        \r\n        //select a non-blank when nothing selected\r\n        if(card.slice(2) !== 'XX' && selected === null) {\r\n            select(card);\r\n            return;\r\n        }\r\n        \r\n        //if click on blank with ace selected\r\n        if(card.slice(2) === 'XX' && selected !== null && selected.slice(0,2) === '01') {\r\n            const {col} = get_rowcol_from_index(deck.indexOf(card));\r\n            if(col === 0) {\r\n                unselect(selected);\r\n                updateDeck(get_deck_with_swap({deck, card1: card, card2: selected}));\r\n            }\r\n        }\r\n\r\n        //if click on blank with any card selected\r\n        if(card.slice(2) === 'XX' && selected !== null) {\r\n            const {col} = get_rowcol_from_index(deck.indexOf(card));\r\n            if(col !== 0) {\r\n                const left = deck[deck.indexOf(card)-1];\r\n                //if left of blank is same suit and one less\r\n                if(left.slice(2) === selected.slice(2) && Number(left.slice(0,2))+1 === Number(selected.slice(0,2))) {\r\n                    unselect(selected);\r\n                    updateDeck(get_deck_with_swap({deck, card1: card, card2: selected}));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GameWrapper>\r\n            {popupText\r\n                ?\r\n                <Popup\r\n                    text={popupText}\r\n                    dismissClick={() => setPopupText(null)}\r\n                    dismissText=\"Cancel\"\r\n                    actionClick={() => reshuffle()}\r\n                    actionText=\"Proceed\"\r\n                />\r\n                : null\r\n            }\r\n            <Header reshuffle={reshuffle} skipMove={skipMove} undoMove={undoMove} />\r\n            <GameBoardWrapper>\r\n                {deck.map((card, i) => <Card key={i} card={card} handleClick={cardClick} />)}\r\n            </GameBoardWrapper>\r\n        </GameWrapper>\r\n        \r\n    );\r\n}","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n    * {\r\n        box-sizing: border-box;\r\n    }\r\n\r\n    body {\r\n      margin: 0;\r\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n        sans-serif;\r\n      -webkit-font-smoothing: antialiased;\r\n      -moz-osx-font-smoothing: grayscale;\r\n      background-color: ${({ theme }) => theme.body};\r\n      color: ${({ theme }) => theme.text};\r\n      font-size: 14px;\r\n    }\r\n`","export const lightTheme = {\r\n    body: \"#F2F2F2\",\r\n    text: \"#444\",\r\n    selected: \"lime\",\r\n    red: \"#F25555\",\r\n    black: \"#455\",\r\n    gray: \"#666\",\r\n    cardBg: \"#DDD\"\r\n};","import Game from './components/Game.js';\nimport { GlobalStyles } from './styles/global';\nimport { lightTheme } from './styles/themes';\nimport { ThemeProvider } from 'styled-components';\n\nfunction App() {\n    return (\n        <ThemeProvider theme={lightTheme}>\n            <GlobalStyles />\n            <Game />\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}